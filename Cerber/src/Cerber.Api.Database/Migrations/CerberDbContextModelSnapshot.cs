// <auto-generated />
using System;
using Cerber.Api.Database.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cerber.Api.Database.Migrations
{
    [DbContext(typeof(CerberDbContext))]
    partial class CerberDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cerber.Api.Database.Model.HeartbeatEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset?>("ClientTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("client_timestamp");

                    b.Property<string>("Instance")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("instance");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("product_id");

                    b.Property<DateTimeOffset>("ServerTimestamp")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("server_timestamp");

                    b.Property<string>("Version")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("version");

                    b.HasKey("Id")
                        .HasName("pk_heartbeat");

                    b.HasIndex("ProductId", "Instance", "Version")
                        .HasDatabaseName("ix_heartbeat_product_instance_version");

                    b.ToTable("heartbeat", (string)null);
                });

            modelBuilder.Entity("Cerber.Api.Database.Model.ProductEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_product");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_product_name");

                    b.ToTable("product", (string)null);
                });

            modelBuilder.Entity("Cerber.Api.Database.Model.HeartbeatEntity", b =>
                {
                    b.HasOne("Cerber.Api.Database.Model.ProductEntity", "Product")
                        .WithMany("Heartbeats")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Cerber.Api.Database.Model.ProductEntity", b =>
                {
                    b.Navigation("Heartbeats");
                });
#pragma warning restore 612, 618
        }
    }
}
